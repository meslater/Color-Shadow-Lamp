esphome:
  name: color-shadow-lamp
  friendly_name: Color Shadow Lamp

external_components:
  - source:
      type: local
      path: components

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

logger:
  baud_rate: 115200

api:
  reboot_timeout: 0s

ota:

captive_portal:

wifi:
  ap:
    ssid: "Color Shadow Setup"
    password: "shadowlamp"

light:
  - platform: color_shadow_light
    id: color_shadow_entity
    output_id: color_shadow_driver
    name: "Color Shadow Lamp"
    icon: "mdi:lightbulb"

switch:
  - platform: template
    id: safe_mode_switch
    name: "Color Shadow Safe Mode"
    icon: "mdi:shield-half-full"
    restore_mode: RESTORE_DEFAULT_ON
    lambda: |-
      return id(color_shadow_driver).safe_mode_enabled();
    optimistic: false
    turn_on_action:
      - lambda: |-
          id(color_shadow_driver).set_safe_mode(true);
      - logger.log: "Safe mode enabled"
    turn_off_action:
      - lambda: |-
          id(color_shadow_driver).set_safe_mode(false);
      - logger.log: "Safe mode disabled"

binary_sensor:
  - platform: gpio
    id: mode_button
    internal: true
    pin:
      number: GPIO9
      mode:
        input: true
        pullup: true
      inverted: true
    on_click:
      - min_length: 50ms
        max_length: 1000ms
        then:
          - light.toggle: color_shadow_entity
    on_multi_click:
      - timing:
          - ON for 15s to 60s
        then:
          - script.execute: factory_reset

button:
  - platform: restart
    id: restart_device
    internal: true
  - platform: template
    name: "Color Shadow Reset"
    id: ha_reset_button
    icon: "mdi:restore"
    on_press:
      - script.execute: factory_reset

script:
  - id: factory_reset
    mode: single
    then:
      - logger.log: "Factory reset requested"
      - lambda: |-
          id(color_shadow_driver).reset_to_safe_mode();
      - switch.turn_on: safe_mode_switch
      - delay: 500ms
      - lambda: |-
          auto *wifi = esphome::wifi::global_wifi_component;
          if (wifi != nullptr) {
            wifi->clear_sta();
            wifi->restart_adapter();
          }
      - delay: 500ms
      - logger.log: "Credentials erased, rebooting"
      - button.press: restart_device
